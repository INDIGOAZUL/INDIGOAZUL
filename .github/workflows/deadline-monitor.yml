name: ‚è∞ Deadline Monitor

on:
  schedule:
    # Run daily at 9 AM UTC (adjust to your timezone)
    - cron: '0 9 * * *'
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  monitor-deadlines:
    name: Monitor Bounty Deadlines
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Check bounty deadlines
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          if (!fs.existsSync('my-bounty-tracking.json')) {
            console.log('No tracking data found');
            return;
          }

          const trackingData = JSON.parse(fs.readFileSync('my-bounty-tracking.json', 'utf8'));

          // Filter active bounties
          const activeBounties = trackingData.bounties.filter(b =>
            b.status === 'in_progress' || b.status === 'claimed'
          );

          if (activeBounties.length === 0) {
            console.log('No active bounties to monitor');
            core.summary.addRaw(`## ‚è∞ Deadline Monitor\n\nNo active bounties to monitor.\n`).write();
            return;
          }

          console.log(`üîç Monitoring ${activeBounties.length} active bounties...`);

          const now = new Date();
          const alerts = {
            overdue: [],
            warning: [],
            ok: []
          };

          for (const bounty of activeBounties) {
            const claimedDate = new Date(bounty.claimed_at || bounty.history[0]?.timestamp);
            const daysSinceClaimed = (now - claimedDate) / (1000 * 60 * 60 * 24);

            // Find last activity
            const lastUpdate = bounty.history[bounty.history.length - 1];
            const lastActivityDate = new Date(lastUpdate.timestamp);
            const daysSinceActivity = (now - lastActivityDate) / (1000 * 60 * 60 * 24);

            // Parse repo from URL
            const match = bounty.url.match(/github\.com\/([^\/]+)\/([^\/]+)\/issues\/(\d+)/);
            if (!match) continue;

            const [, owner, repo, issueNum] = match;

            let alert = {
              bounty,
              daysSinceClaimed: Math.floor(daysSinceClaimed),
              daysSinceActivity: Math.floor(daysSinceActivity),
              owner,
              repo,
              issueNum
            };

            // Categorize
            if (daysSinceActivity > 7) {
              alerts.overdue.push({ ...alert, reason: 'No activity in >7 days' });
            } else if (daysSinceClaimed > 14) {
              alerts.warning.push({ ...alert, reason: 'Claimed >14 days ago' });
            } else if (daysSinceActivity > 3) {
              alerts.warning.push({ ...alert, reason: 'No activity in >3 days' });
            } else {
              alerts.ok.push(alert);
            }
          }

          // Create summary
          let summary = `## ‚è∞ Deadline Monitor Report\n\n`;
          summary += `**Date:** ${now.toLocaleDateString()}\n`;
          summary += `**Active Bounties:** ${activeBounties.length}\n\n`;

          if (alerts.overdue.length > 0) {
            summary += `### üö® OVERDUE (Action Required)\n\n`;

            for (const alert of alerts.overdue) {
              summary += `#### ${alert.bounty.url}\n`;
              summary += `- **Amount:** $${alert.bounty.amount}\n`;
              summary += `- **Status:** ${alert.bounty.status}\n`;
              summary += `- **Claimed:** ${alert.daysSinceClaimed} days ago\n`;
              summary += `- **Last Activity:** ${alert.daysSinceActivity} days ago\n`;
              summary += `- **‚ö†Ô∏è Issue:** ${alert.reason}\n\n`;
              summary += `**Actions:**\n`;
              summary += `1. Review progress immediately\n`;
              summary += `2. Comment on issue with status update\n`;
              summary += `3. Consider abandoning if stuck\n`;
              summary += `4. Or push hard to complete this week\n\n`;
              summary += `---\n\n`;
            }
          }

          if (alerts.warning.length > 0) {
            summary += `### ‚ö†Ô∏è WARNING (Attention Needed)\n\n`;

            for (const alert of alerts.warning) {
              summary += `#### ${alert.bounty.url}\n`;
              summary += `- **Amount:** $${alert.bounty.amount}\n`;
              summary += `- **Status:** ${alert.bounty.status}\n`;
              summary += `- **Claimed:** ${alert.daysSinceClaimed} days ago\n`;
              summary += `- **Last Activity:** ${alert.daysSinceActivity} days ago\n`;
              summary += `- **‚ö° Issue:** ${alert.reason}\n\n`;
              summary += `**Suggestions:**\n`;
              summary += `1. Prioritize this bounty today\n`;
              summary += `2. Make at least one commit\n`;
              summary += `3. Update issue with progress comment\n\n`;
              summary += `---\n\n`;
            }
          }

          if (alerts.ok.length > 0) {
            summary += `### ‚úÖ ON TRACK\n\n`;

            for (const alert of alerts.ok) {
              summary += `- **${alert.bounty.url}** - Active ${alert.daysSinceClaimed}d, Last update ${alert.daysSinceActivity}d ago\n`;
            }

            summary += `\n`;
          }

          summary += `## üìä Recommendations\n\n`;

          const totalPending = alerts.overdue.length + alerts.warning.length + alerts.ok.length;
          const totalValue = activeBounties.reduce((sum, b) => sum + b.amount, 0);

          summary += `**Total Active Value:** $${totalValue}\n\n`;

          if (alerts.overdue.length > 0) {
            summary += `üö® **URGENT:** You have ${alerts.overdue.length} overdue bounty(ies). Either:\n`;
            summary += `- Push hard to complete this week, OR\n`;
            summary += `- Comment on issue to un-assign yourself\n\n`;
          }

          if (totalPending > 3) {
            summary += `‚ö†Ô∏è **Too Many Active Bounties:** You have ${totalPending} active bounties. Consider:\n`;
            summary += `- Focusing on highest-value ones first\n`;
            summary += `- Abandoning lower-value or harder ones\n`;
            summary += `- Aim for max 2-3 active bounties at once\n\n`;
          }

          if (alerts.ok.length === totalPending && totalPending > 0) {
            summary += `‚úÖ **Great Job!** All bounties are on track. Keep the momentum!\n\n`;
          }

          summary += `### üéØ Today's Priority\n\n`;

          if (alerts.overdue.length > 0) {
            const highestValue = alerts.overdue.sort((a, b) => b.bounty.amount - a.bounty.amount)[0];
            summary += `**Focus on:** ${highestValue.bounty.url} ($${highestValue.bounty.amount})\n`;
            summary += `**Reason:** Overdue + highest value\n`;
          } else if (alerts.warning.length > 0) {
            const highestValue = alerts.warning.sort((a, b) => b.bounty.amount - a.bounty.amount)[0];
            summary += `**Focus on:** ${highestValue.bounty.url} ($${highestValue.bounty.amount})\n`;
            summary += `**Reason:** Needs attention + good value\n`;
          } else if (alerts.ok.length > 0) {
            const highestValue = alerts.ok.sort((a, b) => b.bounty.amount - a.bounty.amount)[0];
            summary += `**Continue with:** ${highestValue.bounty.url} ($${highestValue.bounty.amount})\n`;
            summary += `**Reason:** On track + highest value\n`;
          }

          summary += `\n---\n\n`;
          summary += `*Next check: Tomorrow at 9 AM UTC*\n`;

          core.summary.addRaw(summary).write();

          // Create issue on this repo if there are overdue bounties
          if (alerts.overdue.length > 0) {
            console.log('üö® Creating alert issue for overdue bounties...');

            let issueBody = `## üö® Overdue Bounties Alert\n\n`;
            issueBody += `You have **${alerts.overdue.length}** overdue bounty(ies) that need immediate attention:\n\n`;

            for (const alert of alerts.overdue) {
              issueBody += `### ${alert.bounty.url}\n`;
              issueBody += `- Amount: $${alert.bounty.amount}\n`;
              issueBody += `- Claimed ${alert.daysSinceClaimed} days ago\n`;
              issueBody += `- No activity for ${alert.daysSinceActivity} days\n\n`;
            }

            issueBody += `**Action required:**\n`;
            issueBody += `1. Review each bounty\n`;
            issueBody += `2. Make commits or abandon\n`;
            issueBody += `3. Close this issue when addressed\n\n`;
            issueBody += `*Auto-generated by Deadline Monitor*`;

            try {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `üö® Overdue Bounties: ${alerts.overdue.length} need attention`,
                body: issueBody,
                labels: ['deadline-alert', 'urgent']
              });

              console.log('‚úÖ Alert issue created');
            } catch (error) {
              console.log('‚ö†Ô∏è Could not create alert issue:', error.message);
            }
          }
